# myIOTServer.service
#
# This file is a "systemd unit" file describing a service to be started,
# in this case, my "myIOTServer" service.  It is assumed that you can
# already run Server.pm from a command line from the source directory
#
#       perl ./myIOTServer.pm NO_SERVICE
#
# which means that you have already gotten Pub::FS::Server running,
# and upgraded it to SSL by copying /base_data/fileServer/fileServer.prefs
# and the /base_data/_ssl foldeer.
#
# For myIOTServer, in addition, you copy the /base/data/fileServer/fileServer.prefs
# file, which contains the defaults for all systems at this time.
#
# INSTALLATION:
#
# To install this file on a new linux (fedora) machine, copy it to the
# /usr/lib/systemd/system/ directory
#
#   > cd /bass/apps/IOT
#   > sudo cp myIOTServer.service /usr/lib/systsemd/system
#
# and run:
#
#   > sudo systemctl enable myIOTServer
#
# and then
#
#   > sudo systemctl start myIOTServer
#
# This will create a symbolic link from
#
# /etc/systemd/system/network-online.target.wants/myIOTServer.service
#
# to the file in /usr/lib/systemd/system directory, and enable the service
# on startup.  Thereafter you should be able to start and stop the service
# via sudo systemctl start/restart/stop myIOTServer and it should be
# running on a freshly booted machine.
#
# If you modify this file you need to stop the service, recopy this file to
# /usr/lib/systemd/system, and run "sudo systemctl daemon-reload", and then
# restart the service.
#
# Note that we added the auto-restart to this service, but it is not
# currently in the fileServer (or mbe masterServer) service files


[Unit]
Description=:myIOTServer running on a rPi

[Service]
Type=forking
PIDFile=/base_data/temp/myIOTServer/myIOTServer.pid
ExecStart=/base/apps/myIOTServer/myIOTServer.pm
ExecStop=kill -KILL $(cat /base_data/temp/myIOTServer/myIOTServer.pid)
EnvironmentFile=/etc/environment
Restart=on-failure
RestartSec=60s
User=pi

[Install]
# WantedBy=multi-user.target
WantedBy=network-online.target
